#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2020 Tony <https://baidu.com>
# 
# <https://github.com/wrtpi/3-1>
#
# Write by Tony 2020/09/27
# last update at  2020/09/27

name: 31H3

on:
  release:
    types: [published]
  #push:
  #  branches: 
  #    - master
  watch:
      types: [started]
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]
  #  watch:
  #    types: [started]

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  PPPOE_USERNAME: ${{ secrets.PPPOE_USERNAME }}
  PPPOE_PASSWD: ${{ secrets.PPPOE_PASSWD }}
  SCKEY: ${{ secrets.SCKEY }}
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  TZ: Asia/Shanghai
  
  
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
      - name: Clone Repository
        uses: actions/checkout@v1

        
      - name: Init build dependencies
        env:
         DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q)
          sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update -y
          sudo -E apt-get install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
          sudo -E apt-get autoremove -y --purge
          sudo -E apt-get clean -y
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/

        
      - name: Free Disk Space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
        
      #- name: Cleanup Old Action Artifacts
      #  uses: kolpav/purge-artifacts-action@v1
      #  with:
      #   token: ${{ secrets.GITHUB_TOKEN }}
      #   expire-in: 1days # Setting this to 0 will delete all artifacts

      - name: Download Source
        run: |
          mkdir friendlywrt-h3
          cd friendlywrt-h3
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v19.07.1 -m h3.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          repo sync -c  --no-clone-bundle
          ##repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m h3.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle

      - name: Merge UpStearm OpenWrt
        run: |
          cd friendlywrt-h3
          cd .repo/manifests
          #rm -f ./h3.xml
          ### wget https://raw.githubusercontent.com/skytotwo/NanoPi-R1S-Build-By-Actions/master/source_xml/h3_19.07.xml
          #cp ../../../source_xml/h3_19.07.xml h3_19.07.xml
          #cp h3_19.07.xml h3.xml
          #rm -rf ./h3_19.07.xml
          repo sync -c  --no-clone-bundle
      
      - name: Merge LEDE
        run: |
          cd friendlywrt-h3
          git clone https://github.com/coolsnowwolf/lede
          cd friendlywrt
          cp -r ../lede/package/lean package/
          sed -i 's/https:\/\/git.openwrt.org\/project\/luci.git^039ef1f4deba725d3591b159bbc9569885d68131/https:\/\/github.com\/coolsnowwolf\/luci/' feeds.conf.default
          sed -i 's/https:\/\/git.openwrt.org\/feed\/packages.git^00803ffc91e80b16e9c1603ff32106d42e255923/https:\/\/github.com\/coolsnowwolf\/packages/' feeds.conf.default          
      
      - name: Custom Applications
        run: |
          cd friendlywrt-h3/friendlywrt/package
          #git clone https://github.com/Baozisoftware/luci-app-koolproxy
          git clone https://github.com/fw876/helloworld.git
          git clone https://github.com/Baozisoftware/luci-app-koolproxy
          git clone https://github.com/vernesong/OpenClash.git
          git clone https://github.com/destan19/OpenAppFilter.git
          git clone https://github.com/tty228/luci-app-serverchan.git
          git clone https://github.com/BoringCat/luci-app-mentohust.git


      - name: Update Target.mk
        run: |
          cd friendlywrt-h3/friendlywrt/include 
          sed -i 's/dnsmasq /dnsmasq-full default-settings luci/' target.mk    
          
      - name: Update Feeds
        run: |
          cd friendlywrt-h3/friendlywrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Custom Configure File
        run: |
          cd friendlywrt-h3/friendlywrt
          rm -f ./.config*
          wget https://raw.githubusercontent.com/skytotwo/NanoPi-R1S-Build-By-Actions/master/r1s-h3-config
          cp r1s-h3-config .config
      
      - name: Download package
        if: always()
        run: |
          cd friendlywrt-h3/friendlywrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
          
      #- name: SSH connection to Actions 
      #  uses: P3TERX/debugger-action@master

      #- name: SSH connection to Actions 
      #  uses: V2RAY-VPN/debugger-action@master

      - name: SSH connection to Actions
        uses: garypang13/debugger-action@master
        if: env.SSH_ACTIONS == 'true'


      - name: Build OpenWrt
        run: |
          cd friendlywrt-h3
          ./build.sh nanopi_r1s_h3.mk
          #./build.sh nanopi_r1s.mk
          #./build.sh nanopi_r1.mk
      
      - name: Zip Files
        run: |
          find friendlywrt-h3/out/ -name "FriendlyWrt_*img*" | xargs -i zip -r {}.zip {}

      - name: Upload .config file 组织要上传.config配置文件
        run: |
           mkdir -p openwrt/artifact
           cp openwrt/.config openwrt/artifact/OpenWRT_31H3_mini.config

           
      - name: Upload .config file 上传编译配置文件
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: OpenWRT_31H3_mini
          path: openwrt/artifact
        
      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find friendlywrt-h3/out/ -name "FriendlyWrt_*img.zip*" | xargs -i mv -f {} ./artifact/
          
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: FriendlyWrt_NanoPi-R1S H3 v19.07
          path: ./artifact/
